(()=>{"use strict";let e=[],t={default:[]};function n(e){t[e]=[]}function d(){return Object.assign({},t)}function a(n){let d=document.createElement("div");d.classList.add("task"),d.innerHTML=`<div class="task-left-side">\n                                <i class="far fa-check-circle"></i>\n                                <p>${n.description}</p>\n                              </div>\n                              <div class="task-right-side">\n                                <p>${n.date}</p>\n                                <i class="fas fa-times"></i>\n                              </div>`,document.querySelector(".tasks-wrapper").appendChild(d),d.querySelector(".fa-times").addEventListener("click",(function(a){d.remove(),function(n,d){e.splice(e.indexOf(n),1),t[d].splice(t[d].indexOf(n),1)}(n,c())}))}function i(){document.querySelector(".tasks-wrapper").innerHTML=""}function s(e,t){let n=document.createElement("button");return n.classList.add("default-list-items","nav-list-items"),n.innerHTML=`\n                        <i class="fas ${t}"></i>\n                        <p>${e}</p>\n                     `,document.querySelector(".default-list").appendChild(n),n}let l="default";function c(){return l}function o(e){l=e}function r(e){let n=document.createElement("button");return n.classList.add("project-list-items","nav-list-items"),n.innerHTML=`  \n                        <i class="fas fa-tasks"></i>\n                        <p>${e}</p>\n                        <i class="fas fa-times"></i>\n                     `,document.querySelector(".project-list").appendChild(n),n.querySelector(".fa-times").addEventListener("click",(function(d){n.remove(),function(e){delete t[e]}(e)})),{projectDOM:n,title:e}}header=document.querySelector("#header"),header.innerHTML='<div id="logo">\n                            <div>Todo List</div>\n                            <img src="images/icons8-katana-50.png" id="sword">\n                        </div>',header,function(){let e=document.createElement("div");e.setAttribute("id","nav-bar"),e.innerHTML='\n                        <div class="default-list nav-list"></div>\n                            \n                        <div class="nav-bar-header"><h1>Projects</h1></div>\n\n                        <div class="project-list nav-list"></div>\n                            \n                        ',document.querySelector("main").appendChild(e)}(),s("Inbox","fa-thumbtack").addEventListener("click",(function(e){i();let t=d();o("default");for(let e of t.default)a(e)})),s("Today","fa-calendar-day"),s("This Week","fa-calendar-week"),(()=>{let e=d();for(let t in e){if("default"==t)continue;r(t);let n=p.projectDOM;p.title,n.addEventListener("click",(function(n){i();for(let n of e[t])a(n);o(t)}))}})(),function(e){let t=document.createElement("div");t.classList.add("add-project-wrapper"),document.querySelector("#nav-bar").appendChild(t);let s=document.createElement("div");s.classList.add("project-add-button","nav-list-items"),s.innerHTML='<i class="fas fa-plus"></i>\n                           <p>Add Project</p>',t.appendChild(s);let c=document.createElement("div");c.classList.add("add-project"),c.innerHTML='\n                            <input class="add-project-input" type="text">\n                            <div class="add-project-buttons">\n                                <button class="add-project-button project-button">Add</button>\n                                <button class="add-project-cancel project-button">Cancel</button>\n                            </div>\n                            ',c.style.display="none",t.appendChild(c),s.addEventListener("click",(function(e){this.style.display="none",c.style.display="flex"}));let o=c.querySelector(".add-project-button"),u=c.querySelector(".add-project-cancel"),p=c.querySelector(".add-project-input");o.addEventListener("click",(function(e){let t=p.value;if(""==t)return;n(t);let o=d(),u=r(t),f=u.projectDOM,v=u.title;f.addEventListener("click",(function(e){i(),l=v,console.log(d());for(let e of o[v])a(e)})),c.style.display="none",s.style.display="flex"})),u.addEventListener("click",(function(e){c.style.display="none",s.style.display="flex"}))}(),function(){let e=document.createElement("div");e.setAttribute("id","tasks"),e.innerHTML='<div class="tasks-wrapper"></div>',document.querySelector("#main").appendChild(e)}(),function(){let n=document.createElement("div");n.classList.add("add-task-wrapper"),document.querySelector("#tasks").appendChild(n);let d=document.createElement("div");d.classList.add("task-add-button","task"),d.innerHTML='<i class="fas fa-plus"></i>\n                           <p>Add Task</p>',n.appendChild(d);let i=document.createElement("div");i.classList.add("add-task"),i.innerHTML='\n                        <input class="add-task-input" type="text">\n                        <div class="add-task-buttons">\n                            <button class="add-task-button task-button">Add</button>\n                            <button class="add-task-cancel task-button">Cancel</button>\n                        </div>',i.style.display="none",n.appendChild(i),d.addEventListener("click",(function(e){this.style.display="none",i.style.display="flex"}));let s=i.querySelector(".add-task-button"),l=i.querySelector(".add-task-cancel"),o=i.querySelector(".add-task-input");s.addEventListener("click",(function(n){let s=c(),l=o.value,r=function(n,d,a="default"){let i={description:n,date:d,project:a};return e.push(i),function(e,n){null==t[e]&&(t[e]=[]),t[e].push(n)}(a,i),i}(l,"No Date",s);""!=l&&(a(r),d.style.display="flex",i.style.display="none")})),l.addEventListener("click",(function(e){d.style.display="flex",i.style.display="none"}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,